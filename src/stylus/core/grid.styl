// Project Grids
//////////////////////////////////////////////////////
//////////////////////////////////////////////////////

// Admixture for building a simple rubber mesh
// from a given number of columns
// with the specified rubber spacing in percent between them
// @author Levon Gambaryan
//
// @param {Number} $columns - number of columns
// @param {Percentage} $gutter - percentage indent
//
$make-grid($columns, $gutter)
  // Calculate the column width
  $column-width = (100% - ($gutter * ($columns - 1))) / $columns

  > div,
  > li
    width $column-width

    // Indent all columns except the last
    &:not(:nth-child({$columns}n))
      margin-right $gutter

    // The last column has no indentation
    &:nth-child({$columns}n)
      margin-right 0

    // Glued blocks
    for $i in (2..$columns)
      &.glued-{$i}
        width $column-width * $i + $gutter * ($i - 1)

  &.no-mobile
    > div,
    > li
      // On mobile - expand the grid into a column
      +$xs()
        display block
        width 100%

      &:not(:nth-child({$columns}n))
        // On mobile we set zero indent to all columns
        +$xs()
          margin-right 0

      // Glued blocks
      for $i in (2..$columns)
        &.glued-{$i}
          +$xs()
            display block
            width 100%

// Inline-blocks grid (fro using in grid degradation, for example)
$grid()
  > div
    display inline-block
    vertical-align top
    min-height 1px

  &.grid--for-two
    $make-grid(2, 1.4%)

  &.grid--for-three
    $make-grid(3, 1.4%)


// Project Grids Mixin
//////////////////////////////////////////////////////

$adaptive-grid($view)
  display grid

  if $view == "gridname"
    grid-template-columns 1fr 1fr
    gap 16vw

    +$sm()
      gap 7vw

    +$xs()
      grid-template-columns 1fr
      gap 0
